{"ast":null,"code":"(function ($) {\n  \"use strict\";\n\n  function getTimeRemaining(endtime) {\n    var t = Date.parse(endtime) - Date.parse(new Date());\n    var seconds = Math.floor(t / 1000 % 60);\n    var minutes = Math.floor(t / 1000 / 60 % 60);\n    var hours = Math.floor(t / (1000 * 60 * 60) % 24);\n    var days = Math.floor(t / (1000 * 60 * 60 * 24));\n    return {\n      'total': t,\n      'days': days,\n      'hours': hours,\n      'minutes': minutes,\n      'seconds': seconds\n    };\n  }\n\n  function initializeClock(id, endtime) {\n    var daysSpan = $('.days');\n    var hoursSpan = $('.hours');\n    var minutesSpan = $('.minutes');\n    var secondsSpan = $('.seconds');\n\n    function updateClock() {\n      var t = getTimeRemaining(endtime);\n      daysSpan.html(t.days);\n      hoursSpan.html(('0' + t.hours).slice(-2));\n      minutesSpan.html(('0' + t.minutes).slice(-2));\n      secondsSpan.html(('0' + t.seconds).slice(-2));\n\n      if (t.total <= 0) {\n        clearInterval(timeinterval);\n      }\n    }\n\n    updateClock();\n    var timeinterval = setInterval(updateClock, 1000);\n  }\n\n  var deadline = new Date(Date.parse(new Date()) + 25 * 24 * 60 * 60 * 1000 + 13 * 60 * 60 * 1000);\n  initializeClock('clockdiv', deadline);\n})(jQuery);","map":{"version":3,"sources":["/home/franklin/Documents/nosyevents/app/javascript/packs/countdowntime.js"],"names":["$","getTimeRemaining","endtime","t","Date","parse","seconds","Math","floor","minutes","hours","days","initializeClock","id","daysSpan","hoursSpan","minutesSpan","secondsSpan","updateClock","html","slice","total","clearInterval","timeinterval","setInterval","deadline","jQuery"],"mappings":"AAAA,CAAC,UAAUA,CAAV,EAAa;AACV;;AAEA,WAASC,gBAAT,CAA0BC,OAA1B,EAAmC;AACjC,QAAIC,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWH,OAAX,IAAsBE,IAAI,CAACC,KAAL,CAAW,IAAID,IAAJ,EAAX,CAA9B;AACA,QAAIE,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAYL,CAAC,GAAG,IAAL,GAAa,EAAxB,CAAd;AACA,QAAIM,OAAO,GAAGF,IAAI,CAACC,KAAL,CAAYL,CAAC,GAAG,IAAJ,GAAW,EAAZ,GAAkB,EAA7B,CAAd;AACA,QAAIO,KAAK,GAAGH,IAAI,CAACC,KAAL,CAAYL,CAAC,IAAI,OAAO,EAAP,GAAY,EAAhB,CAAF,GAAyB,EAApC,CAAZ;AACA,QAAIQ,IAAI,GAAGJ,IAAI,CAACC,KAAL,CAAWL,CAAC,IAAI,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAArB,CAAZ,CAAX;AACA,WAAO;AACL,eAASA,CADJ;AAEL,cAAQQ,IAFH;AAGL,eAASD,KAHJ;AAIL,iBAAWD,OAJN;AAKL,iBAAWH;AALN,KAAP;AAOD;;AAED,WAASM,eAAT,CAAyBC,EAAzB,EAA6BX,OAA7B,EAAsC;AACpC,QAAIY,QAAQ,GAAGd,CAAC,CAAC,OAAD,CAAhB;AACA,QAAIe,SAAS,GAAGf,CAAC,CAAC,QAAD,CAAjB;AACA,QAAIgB,WAAW,GAAGhB,CAAC,CAAC,UAAD,CAAnB;AACA,QAAIiB,WAAW,GAAGjB,CAAC,CAAC,UAAD,CAAnB;;AAEA,aAASkB,WAAT,GAAuB;AACrB,UAAIf,CAAC,GAAGF,gBAAgB,CAACC,OAAD,CAAxB;AAEAY,MAAAA,QAAQ,CAACK,IAAT,CAAchB,CAAC,CAACQ,IAAhB;AACAI,MAAAA,SAAS,CAACI,IAAV,CAAe,CAAC,MAAMhB,CAAC,CAACO,KAAT,EAAgBU,KAAhB,CAAsB,CAAC,CAAvB,CAAf;AACAJ,MAAAA,WAAW,CAACG,IAAZ,CAAiB,CAAC,MAAMhB,CAAC,CAACM,OAAT,EAAkBW,KAAlB,CAAwB,CAAC,CAAzB,CAAjB;AACAH,MAAAA,WAAW,CAACE,IAAZ,CAAiB,CAAC,MAAMhB,CAAC,CAACG,OAAT,EAAkBc,KAAlB,CAAwB,CAAC,CAAzB,CAAjB;;AAEA,UAAIjB,CAAC,CAACkB,KAAF,IAAW,CAAf,EAAkB;AAChBC,QAAAA,aAAa,CAACC,YAAD,CAAb;AACD;AACF;;AAEDL,IAAAA,WAAW;AACX,QAAIK,YAAY,GAAGC,WAAW,CAACN,WAAD,EAAc,IAAd,CAA9B;AACD;;AAED,MAAIO,QAAQ,GAAG,IAAIrB,IAAJ,CAASA,IAAI,CAACC,KAAL,CAAW,IAAID,IAAJ,EAAX,IAAyB,KAAK,EAAL,GAAU,EAAV,GAAe,EAAf,GAAoB,IAA7C,GAAoD,KAAK,EAAL,GAAU,EAAV,GAAe,IAA5E,CAAf;AACAQ,EAAAA,eAAe,CAAC,UAAD,EAAaa,QAAb,CAAf;AAEH,CA5CD,EA4CGC,MA5CH","sourcesContent":["(function ($) {\r\n    \"use strict\";\r\n\r\n    function getTimeRemaining(endtime) { \r\n      var t = Date.parse(endtime) - Date.parse(new Date());\r\n      var seconds = Math.floor((t / 1000) % 60);\r\n      var minutes = Math.floor((t / 1000 / 60) % 60);\r\n      var hours = Math.floor((t / (1000 * 60 * 60)) % 24);\r\n      var days = Math.floor(t / (1000 * 60 * 60 * 24));\r\n      return {\r\n        'total': t,\r\n        'days': days,\r\n        'hours': hours,\r\n        'minutes': minutes,\r\n        'seconds': seconds\r\n      };\r\n    }\r\n\r\n    function initializeClock(id, endtime) { \r\n      var daysSpan = $('.days');\r\n      var hoursSpan = $('.hours');\r\n      var minutesSpan = $('.minutes');\r\n      var secondsSpan = $('.seconds');\r\n\r\n      function updateClock() { \r\n        var t = getTimeRemaining(endtime);\r\n\r\n        daysSpan.html(t.days);\r\n        hoursSpan.html(('0' + t.hours).slice(-2));\r\n        minutesSpan.html(('0' + t.minutes).slice(-2));\r\n        secondsSpan.html(('0' + t.seconds).slice(-2))\r\n\r\n        if (t.total <= 0) {\r\n          clearInterval(timeinterval);\r\n        }\r\n      }\r\n\r\n      updateClock();\r\n      var timeinterval = setInterval(updateClock, 1000);\r\n    }\r\n\r\n    var deadline = new Date(Date.parse(new Date()) + 25 * 24 * 60 * 60 * 1000 + 13 * 60 * 60 * 1000); \r\n    initializeClock('clockdiv', deadline);\r\n\r\n})(jQuery);"]},"metadata":{},"sourceType":"module"}